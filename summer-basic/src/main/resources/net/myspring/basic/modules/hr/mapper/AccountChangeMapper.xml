<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.myspring.basic.modules.hr.mapper.AccountChangeMapper">
        <select id="findPage" resultType="AccountChangeDto">
            select
            t1.*,account.office_id
            from
            hr_account_change t1,hr_account account,sys_office office
            where
            t1.enabled=1
            and t1.account_id=account.id
            and account.office_id=office.id
            <include refid="net.myspring.basic.modules.sys.mapper.OfficeMapper.officeFilter" />
            <if test="p.createdDateStart !=null">
                AND t1.created_date> #{p.createdDateStart}
            </if>
            <if test="p.createdDateEnd !=null">
                AND t1.created_date &lt; #{p.createdDateEnd}
            </if>
            <if test="p.type != null">
                and t1.type = #{p.type}
            </if>
            <if test="p.createdByName !=null">
                and t1.account_id in(
                select t2.id
                from hr_account t2
                where t2.login_name like concat('%',#{p.createdByName},'%')
                and t2.enabled=1
                )
            </if>
            <if test="p.officeId !=null">
                and t1.account_id  in(
                select t2.id
                from hr_account t2 ,sys_office office
                where  t2.enabled=1
                and t2.office_id=office.id
                and (
                    office.parent_ids like concat('%,',#{p.officeId},',%')
                  or office.id=#{p.officeId}
                )
                )
            </if>
        </select>

    <select id="findForm" resultType="net.myspring.basic.modules.hr.web.form.AccountChangeForm">
        SELECT t2.id as 'accountId' ,t2.office_id,t2.leader_id,t2.position_id,t3.mobile_phone as 'employee.mobilePhone',t3.idcard as 'employee.idcard',t3.entry_date as 'employee.entryDate',
        t3.bank_number as 'employee.bankNumber',t3.salary as 'employee.salary',t3.regular_date as 'employee.regularDate',t3.leave_date as 'employee.leaveDate'
        from
        hr_account t2,hr_employee t3
        where
          t2.employee_id=t3.id
        <if test="p.id!=null">
            and t2.id=(
            SELECT account_id FROM hr_account_change where id=#{p.id}
            )
        </if>
        <if test="p.accountId!=null">
            and t2.id=#{p.accountId}
        </if>
    </select>

    </mapper>