<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.myspring.future.modules.crm.mapper.AfterSaleMapper">

    <select id="findPage" resultType="AfterSale">
        SELECT
        t1.*
        FROM
        crm_after_sale t1,crm_depot depot ,crm_product_ime im
        WHERE
        t1.enabled=1
        and t1.bad_product_ime_id=im.id
        and im.depot_id=depot.id
       <include refid="afterSaleFilter" />
    </select>

    <select id="findFilter" resultType="AfterSale">
        SELECT
        t1.*
        FROM
        crm_after_sale t1
        WHERE
        t1.enabled=1
        <include refid="afterSaleFilter" />
    </select>


    <select id="findByBadProductImeIn" resultType="AfterSale">
        SELECT t1.*
        FROM crm_after_sale t1,crm_product_ime t2
        WHERE t1.bad_product_ime_id=t2.id
        and t2.ime in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findMaxBusinessId" resultType="String">
        SELECT max(t1.business_id)
        FROM crm_after_sale t1
        WHERE t1.created_date >= #{dateStart}
    </select>


    <select id="findByToFinanceDateIsNull" resultType="AfterSale">
        SELECT t1.*
        FROM crm_after_sale t1
        WHERE t1.to_finance_date is null
    </select>



    <select id="findLabels" resultType="AfterSale">
        SELECT t1.id
        FROM crm_after_sale t1
        WHERE t1.enabled = 1
        and t1.id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <sql id="afterSaleFilter">
        <if test="p.id !=null">
            and ( t1.id like concat('%',#{p.id},'%') or t1.id=#{p.id})
        </if>
        <if test="p.remarks !=null">
            and t1.remarks like concat('%',#{p.remarks},'%')
        </if>
        <if test="p.createdDateStart !=null">
            and t1.created_date &gt;= #{p.createdDateStart}
        </if>
        <if test="p.createdDateEnd !=null">
            and t1.created_date &lt;= #{p.createdDateEnd}
        </if>
        <if test="p.toCompanyDateStart !=null">
            and t1.to_company_date &gt;= #{p.toCompanyDateStart}
        </if>
        <if test="p.toCompanyDateEnd !=null">
            and t1.to_company_date &lt;= #{p.toCompanyDateEnd}
        </if>
        <if test="p.fromCompanyDateStart !=null">
            and t1.from_company_date &gt;= #{p.fromCompanyDateStart}
        </if>
        <if test="p.fromCompanyDateEnd !=null">
            and t1.from_company_date &lt;= #{p.fromCompanyDateEnd}
        </if>
        <if test="p.toStoreDateStart !=null">
            and t1.to_store_date &gt;= #{p.toStoreDateStart}
        </if>
        <if test="p.toStoreDateEnd !=null">
            and t1.to_store_date &lt;= #{p.toStoreDateEnd}
        </if>
    </sql>
</mapper>
