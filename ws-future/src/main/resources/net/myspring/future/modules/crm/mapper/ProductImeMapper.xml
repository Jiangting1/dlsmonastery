<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.myspring.future.modules.crm.mapper.ProductImeMapper">

    <select id="findList" resultType="ProductImeDto">

        SELECT
            sale.created_date productImeSaleCreatedDate,
            upload.created_date productImeUploadCreatedDate,
            validProductIme.*
        FROM
        (
            SELECT
              t1.*
            FROM
                crm_product_ime t1,
                crm_depot depot
            WHERE
                t1.enabled = 1
                AND t1.depot_id = depot.id
                AND depot.enabled = 1
                AND t1.company_id =  #{p.companyId}
                <!--<include refid="net.myspring.future.modules.basic.mapper.DepotMapper.depotFilter" />-->

                <if test="p.boxIme !=null" >
                    and t1.box_ime like CONCAT('%',#{p.boxIme},'%')
                </if>
                <if test="p.imeReverse !=null" >
                    and t1.ime_reverse like CONCAT(#{p.imeReverse},'%')
                </if>
                <if test="p.ime2 !=null" >
                    and t1.ime2  like CONCAT('%',#{p.ime2},'%')
                </if>
                <if test="p.meid !=null" >
                    and t1.meid like CONCAT('%',#{p.meid},'%')
                </if>
                <if test="p.imeOrMeidList !=null" >
                    and (t1.ime in
                    <foreach item="item" index="index" collection="p.imeOrMeidList" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    or t1.ime2 in
                    <foreach item="item" index="index" collection="p.imeOrMeidList" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    or t1.meid in
                    <foreach item="item" index="index" collection="p.imeOrMeidList" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="p.createdDateStart !=null">
                    AND t1.created_date>= #{p.createdDateStart}
                </if>
                <if test="p.createdDateEnd !=null">
                    AND t1.created_date &lt; #{p.createdDateEnd}
                </if>
                <if test="p.retailDateStart !=null">
                    AND t1.retail_date &gt;= #{p.retailDateStart}
                </if>
                <if test="p.retailDateEnd !=null">
                    AND t1.retail_date &lt; #{p.retailDateEnd}
                </if>
                <if test="p.createTimeStart !=null">
                    AND t1.create_time &gt;= #{p.createTimeStart}
                </if>
                <if test="p.createTimeEnd !=null">
                    AND t1.create_time &lt; #{p.createTimeEnd}
                </if>
                <if test="p.depotId !=null" >
                    and t1.depot_id = #{p.depotId}
                </if>
                <if test="p.productId !=null" >
                    and t1.product_id = #{p.productId}
                </if>
                <if test="p.inputType !=null" >
                    and t1.input_type = #{p.inputType}
                </if>
            ) validProductIme
            LEFT JOIN crm_product_ime_sale sale ON validProductIme.product_ime_sale_id = sale.id
            LEFT JOIN crm_product_ime_upload upload ON validProductIme.product_ime_upload_id = upload.id

        <if test="p.pageable.sort !=null" >
           order by validProductIme.${p.pageable.sort}
        </if>
        limit ${p.pageable.offset},${p.pageable.pageSize}
    </select>


    <select id="findDtoListByImeList" resultType="ProductImeDto">

        SELECT
        sale.created_date productImeSaleCreatedDate,
        sale.created_by productImeSaleCreatedBy,
        sale.shop_id productImeSaleShopId,
        upload.created_date productImeUploadCreatedDate,
        upload.created_by productImeUploadCreatedBy,
        upload.shop_id productImeUploadShopId,
        validProductIme.*
        FROM
        (
            SELECT
            t1.*
            FROM
            crm_product_ime t1,
            crm_depot depot
            WHERE
                t1.enabled = 1
                AND t1.depot_id = depot.id
                AND depot.enabled = 1
                AND t1.company_id =  #{companyId}
                AND t1.ime in
                <foreach item="item" index="index" collection="imeList" open="(" separator="," close=")">
                      #{item}
                </foreach>
            ) validProductIme
            LEFT JOIN crm_product_ime_sale sale ON validProductIme.product_ime_sale_id = sale.id
            LEFT JOIN crm_product_ime_upload upload ON validProductIme.product_ime_upload_id = upload.id
    </select>





    <select id="getProductImeDetail" resultType="ProductImeDto">
        SELECT
            sale.created_date productImeSaleCreatedDate,
            upload.created_date productImeUploadCreatedDate,
            ime.*
        FROM
            crm_product_ime ime
            LEFT JOIN crm_product_ime_sale sale ON ime.product_ime_sale_id = sale.id
            LEFT JOIN crm_product_ime_upload upload ON ime.product_ime_upload_id = upload.id
        WHERE
             ime.enabled = 1
             AND ime.id = #{productImeId}
    </select>


    <select id="getProductImeHistoryList" resultType="ProductImeHistoryDto">
        SELECT
            result.id, result.type, result.from_depot_id, result.to_depot_id, result.created_date, result.created_by, result.remarks
        FROM
                (
                    SELECT t1.id, '串码调拨' type, t1.from_depot_id, t1.to_depot_id, t1.created_date, t1.created_by, t1.remarks
                    FROM crm_ime_allot t1
                    WHERE t1.enabled = 1 AND t1.product_ime_id = #{productImeId}

                    UNION ALL

                    SELECT t2.business_id id, '货品订货' type, NULL from_depot_id, t2.shop_id to_depot_id, t1.created_date, t1.created_by, t1.remarks
                    FROM crm_goods_order_ime t1, crm_goods_order t2
                    WHERE t1.enabled = 1 AND t1.product_ime_id = #{productImeId} AND t1.goods_order_id = t2.id AND t2.enabled = 1

                    UNION ALL

                    SELECT t1.id, '售后调拨' type, t1.from_depot_id, t1.to_depot_id, t1.created_date, t1.created_by, t1.remarks
                    FROM crm_after_sale_ime_allot t1
                    WHERE t1.enabled = 1 AND t1.product_ime_id = #{productImeId}

                    UNION ALL

                    SELECT t2.id, '大库调拨' type, t2.from_store_id from_depot_id, t2.to_store_id to_depot_id, t1.created_date, t1.created_by, t1.remarks
                    FROM crm_store_allot_ime t1, crm_store_allot t2
                    WHERE t1.enabled = 1 AND t1.product_ime_id = #{productImeId} AND t1.store_allot_id = t2.id AND t2.enabled = 1

                    UNION ALL

                    SELECT t1.id, '串码上报' type, t1.shop_id from_depot_id, NULL to_depot_id, t1.created_date, t1.created_by, t1.remarks
                    FROM crm_product_ime_upload t1
                    WHERE t1.enabled = 1 AND t1.product_ime_id = #{productImeId}

                    UNION ALL

                    SELECT
                        t1.id,
                        (CASE WHEN t1.is_back = 1 THEN '核销退回' ELSE '串码核销' END) type,
                        (CASE WHEN t1.is_back = 1 THEN NULL ELSE t1.shop_id END ) from_depot_id,
                        (CASE WHEN t1.is_back = 1 THEN t1.shop_id ELSE NULL END ) to_depot_id,
                        t1.created_date,
                        t1.created_by,
                        t1.remarks
                    FROM crm_product_ime_sale t1
                    WHERE t1.enabled = 1 AND t1.product_ime_id = #{productImeId}

                ) result
        ORDER BY
            result.created_date DESC
    </select>


    <select id="findByImeList" resultType="ProductIme">
        SELECT
        t1.*
        FROM
        crm_product_ime t1
        where t1.enabled=1
        and t1.ime in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        or t1.ime2 in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        or t1.meid in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findShipList" resultType="ProductIme">
        <if test="boxList !=null and boxList.size() !=0">
            SELECT
            t1.*
            FROM
            crm_product_ime t1
            where t1.enabled=1
            and t1.depot_id=#{storeId}
            and t1.box_ime IN
            <foreach item="item" index="index" collection="boxList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="boxImeAndIme">
            UNION
        </if>
        <if test="imeList !=null and imeList.size() !=0">
            SELECT
            t1.*
            FROM
            crm_product_ime t1
            where t1.enabled=1
            and (t1.ime IN
            <foreach item="item" index="index" collection="imeList" open="(" separator="," close=")">
                #{item}
            </foreach>
            or t1.ime2 in
            <foreach item="item" index="index" collection="imeList" open="(" separator="," close=")">
                #{item}
            </foreach>
            or t1.meid in
            <foreach item="item" index="index" collection="imeList" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
        </if>
    </select>

    <select id="findByIme" resultType="ProductIme">
        SELECT
        t1.*
        FROM
        crm_product_ime t1
        where t1.enabled=1
        and t1.ime =  #{item} or t1.ime2 =  #{item} or t1.meid =  #{item}
    </select>
</mapper>
