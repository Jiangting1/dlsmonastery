<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.myspring.future.modules.basic.mapper.ProductTypeMapper">

    <select id="findPage" resultType="ProductTypeDto">
        SELECT t1.*, group_concat(t2.name) as productNames
        FROM crm_product_type t1
          left join crm_product t2
          on t1.id=t2.product_type_id
        where t1.enabled =1 AND t2.enabled = 1
        <if test="p.name != null">
            AND t1.name LIKE CONCAT('%',#{p.name},'%')
        </if>
        <if test="p.code != null">
            AND t1.code LIKE CONCAT('%',#{p.code},'%')
        </if>
        group by t1.id
    </select>

    <select id="findByFilter" resultType="ProductType">
        SELECT  t1.*
        FROM  crm_product_type t1
        where t1.enabled=1
        <include refid="productTypeFilter" />
    </select>

    <select id="findByNameLike" resultType="ProductType">
        SELECT  t1.*
        FROM  crm_product_type t1
        where t1.enabled=1
              and t1.name like concat('%',#{name},'%')
    </select>

    <select id="findByDemoPhoneTypeIds" resultType="ProductType">
        SELECT t1.*
        FROM crm_product_type t1
        where t1.enabled=1
        and t1.demo_phone_type_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findLabels" resultType="ProductType">
        SELECT t1.id,t1.name
        FROM crm_product_type t1
        where t1.enabled=1
        and t1.id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="updateDemoPhoneTypeToNull">
        UPDATE crm_product_type SET demo_phone_type_id =NULL
        where demo_phone_type_id=#{demoPhoneTypeId}
    </update>

    <update id="updateDemoPhoneType">
        UPDATE crm_product_type SET demo_phone_type_id =#{demoPhoneTypeId}
        where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="findAllScoreType" resultType="ProductType">
      SELECT t1.* from crm_product_type t1 where t1.score_type=1 and t1.enabled = 1 and t1.price1 is not null order by t1.name
    </select>

    <select id="findByDemoPhoneTypeId" resultType = "ProductType">
        SELECT
        DISTINCT t1.*
        FROM crm_product_type t1
        WHERE t1.enabled = 1 AND t1.demo_phone_type_id = #{demoPhoneTypeId}
    </select>

    <sql id="productTypeFilter">
        <if test="p.name!=null">
            and t1.name=#{p.name}
        </if>
        <if test="p.code!=null">
            and t1.code=#{p.code}
        </if>
    </sql>




</mapper>
